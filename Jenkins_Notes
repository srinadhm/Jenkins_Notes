Jenkins

Advantages of jenkins

What is continuous integration 

What is continuous delivery

Continuous Delivery v/s Deployment 

Different types of Jobs or Projects we can create
1.Freestyle
2.Maven ( by default wont be there plugin has to be installed)
3.Pipeline ( applicable for stages in the project checkout,build,build docker image,
push the image to ecr/docker hub,push artifacts to nexus,code quality)
4.Multi branch pipeline

Pipeline types
1.Scripted 
2.Declarative

Pipeline integration with git,maven,nexus,sonarqube,docker,ansible,kubernetes

different parameters 
string 
file
active choice

Jenkins Master slave architecture advantages and flow  
Procedure to setup master slave nodes

Pipeline example on string and active choice parameter
Pipeline to push artifacts to nexus
Pipeline to push docker image to docker hub
Pipeline to deploy or run docker image from ansible.
Pipeline to push docker image to amazon ecr
Pipeline to deploy application from kubernetes
Pipeline to deploy from helm chart 
Pipeline to generate sonarqube code coverage report 
Pipeline to send pipeline status to email 
Jenkins git webhook trigger  
Pipeline example with master slave/node for both scripted and  declarative  

Freestyle Project Creation
---------------------------

Java is required for jenkins

we need to do ci for java project (continuous Integration)

[root@ip-172-31-92-237 ~]# find / -name git
/etc/selinux/targeted/active/modules/100/git
/var/lib/jenkins/plugins/git
/var/lib/jenkins/plugins/git/META-INF/maven/org.jenkins-ci.plugins/git
/usr/bin/git
/usr/share/doc/git-2.32.0/contrib/mw-to-git/bin-wrapper/git
/usr/share/bash-completion/completions/git
/usr/share/emacs/site-lisp/git
/usr/libexec/git-core/git

[root@ip-172-31-92-237 ~]# find / -name java
/etc/pki/ca-trust/extracted/java
/etc/pki/java
/etc/java
/etc/alternatives/java
/var/lib/alternatives/java
/usr/bin/java
/usr/lib/java
/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.302.b08-0.amzn2.0.1.x86_64/jre/bin/java
/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.302.b08-0.amzn2.0.1.x86_64/bin/java
/usr/lib/jvm/java
/usr/lib/jvm-exports/java
/usr/share/java

[root@ip-172-31-92-237 ~]# find / -name maven
/etc/maven

As maven is present in /opt directory we need to tell the maven location in jenkins GUI 

Manage Jenkins ----> Global Tool Configuration (Configure tools, their locations and automatic installers.) ----> 
Maven --- > Maven installations :-   Name : maven-3.8.4 MAVEN_HOME : /opt/apache-maven-3.8.4 Uncheck Install automatically ----> save


Anything under /usr/bin jenkins will identify automatically we dont want to mention explicitly

Create a Project
#########
Dashboard ----> New Item ---> Enter an item name ---- Java-FreeStyle (Project name should be given ) ----> Click on Freestyle project ---> Ok




This is the central feature of Jenkins. Jenkins will build your project, combining any SCM with any build system, and this can be even used for something other than software build.

Sub sections in Free style Project
1.General (for what purpose we created the project that should be the general) 
Discard old builds
GitHub project
This build requires lockable resources
This project is parameterized
Throttle builds
Disable this project
Execute concurrent builds if necessary
------------------------
Description
this project is created to checkout and build the java projects and we have string parameter for passing branch 

2.Source Code Management (where is the sourcecode located  ) 

None
Git

Select Git and provide Repository Url and Branch if it is private repo provide credentials as well.

Repository URL 
https://github.com/srinadhm/springboothello-CICD.git

Credentials
none (it is public repository)

Branches to build
*/master

3.Build Triggers (When any commit is done in github automatically triggers job , scheduling for every 5-10 minutes any commit is done in github)
Trigger builds remotely (e.g., from scripts)
Build after other projects are built
Build periodically
GitHub hook trigger for GITScm polling
Poll SCM

4.Build Environment (Before build if we want to delete workspace , add timestamps to the console)
Delete workspace before build starts
Use secret text(s) or file(s)
Abort the build if it's stuck
Add timestamps to the Console Output
Inspect build log for published Gradle build scans
With Ant

5.Build (for building this project which tool we can use or which command we can execute during build ,
here after checking out the project we will use maven for building the project )

for maven we need to select Invoke top-level Maven targets

Maven Version : maven-3.8.4 (we added in global tool conf select that one in drop down) 
Goals : clean install

6.Post-build Actions (after the build do we need to send a email notification, delete workspace when the build is done, archive the artifacts


Save ---->  Build Now 

If we want to change Url or branch we can use Configure.

###################################################################

To create maven project we need to install maven plugin 

Manage Jenkins ---> Manage Plugins (Add, remove, disable or enable plugins that can extend the functionality of Jenkins) ---> Available --> Maven Integration

---> Install without restart

Dashboard ----> New Item ---> Enter an item name ---- Java-Maven-Project  (Project name should be given if we are sure our project is 
developed using maven directly we can create Maven project ) ----> Click on Maven project ---> Ok

#######################################################


Jenkins Pipeline Project 

Dashboard ----> New Item ---> Enter an item name ---- Java-Pipeline-Project (Project name should be given) ----> Click on Pipeline ---> Ok

Pipeline
Orchestrates long-running activities that can span multiple build agents. Suitable for building pipelines (formerly known as workflows) and/or organizing complex activities that do not easily fit in free-style job type.


1.General
Description : this project is for spring boot application.

Discard old builds
Do not allow concurrent builds
Do not allow the pipeline to resume if the controller restarts
GitHub project
Pipeline speed/durability override
Preserve stashes from completed builds
This project is parameterized
Throttle builds

2.Build Triggers

Build after other projects are built
Build periodically
GitHub hook trigger for GITScm polling
Poll SCM
Disable this project
Quiet period
Trigger builds remotely (e.g., from scripts)

3.Advanced Project Options

Display Name 

4.Pipeline

Definition 

Pipeline script
Pipeline script from SCM ( we can write pipeline and push to github with usually names Jenkinsfile ) 


In order to run the pipeline we need an agent if you dont have slave agents or slave labels only jenkins master is present
we can mention agent as any

pipeline {
    agent any
    tools {
    maven 'maven-3.8.4'
    }
    stages{
        stage('git checkout stage ') { 
            steps {
                echo 'git checkout'
                sh 'git --version' 
            }
        }
        stage('Build stage ') { 
            steps {
                echo 'maven stage'
                sh 'mvn --version' 
            }
        }
    }
}

Declarative Pipeline with 2 stages one is  git checkout by printing git checkout and running git version & another one is build stage by printing maven stage and running maven version 

Output:

Started by user mupparaju srinadh
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Java-Pipeline-Project
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Tool Install)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (git checkout stage )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
git checkout
[Pipeline] sh
+ git --version
git version 2.32.0
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build stage )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
maven stage
[Pipeline] sh
+ mvn --version
Apache Maven 3.8.4 (9b656c72d54e5bacbed989b64718c159fe39b537)
Maven home: /opt/apache-maven-3.8.4
Java version: 1.8.0_302, vendor: Red Hat, Inc., runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.302.b08-0.amzn2.0.1.x86_64/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "5.10.75-79.358.amzn2.x86_64", arch: "amd64", family: "unix"
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS


#####################################################

pipeline {
    agent any
    tools {
    maven 'maven-3.8.4'
    }
    stages{
        stage('git checkout stage ') { 
            steps {
                echo 'git checkout'
                git url:  'https://github.com/srinadhm/springboothello-CICD.git' 
            }
        }
        stage('Build stage ') { 
            steps {
                echo 'maven stage'
                sh 'mvn clean install' 
            }
        }
    }
}

Started by user mupparaju srinadh
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Java-Pipeline-Project
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Tool Install)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (git checkout stage )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
git checkout
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/srinadhm/springboothello-CICD.git
 > git init /var/lib/jenkins/workspace/Java-Pipeline-Project # timeout=10
Fetching upstream changes from https://github.com/srinadhm/springboothello-CICD.git
 > git --version # timeout=10
 > git --version # 'git version 2.32.0'
 > git fetch --tags --force --progress -- https://github.com/srinadhm/springboothello-CICD.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/srinadhm/springboothello-CICD.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision af74454c512337cf4e486ee462f6ee33ab98a8b2 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b master af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
Commit message: "Update Jenkinsfile-NexusCI"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build stage )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
maven stage
[Pipeline] sh
+ mvn clean install
[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------< org.springframework:gs-spring-boot >-----------------
[INFO] Building gs-spring-boot 0.1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ gs-spring-boot ---
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ gs-spring-boot ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/main/resources
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ gs-spring-boot ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /var/lib/jenkins/workspace/Java-Pipeline-Project/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ gs-spring-boot ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ gs-spring-boot ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ gs-spring-boot ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ gs-spring-boot ---
[INFO] Building jar: /var/lib/jenkins/workspace/Java-Pipeline-Project/target/gs-spring-boot-0.1.0.jar
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.0.5.RELEASE:repackage (default) @ gs-spring-boot ---
[INFO] 
[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ gs-spring-boot ---
[INFO] Installing /var/lib/jenkins/workspace/Java-Pipeline-Project/target/gs-spring-boot-0.1.0.jar to /var/lib/jenkins/.m2/repository/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.jar
[INFO] Installing /var/lib/jenkins/workspace/Java-Pipeline-Project/pom.xml to /var/lib/jenkins/.m2/repository/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.610 s
[INFO] Finished at: 2021-11-25T08:21:43Z
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS

[root@ip-172-31-92-237 ~]# jps
12107 Jps
3966 jenkins.war
[root@ip-172-31-92-237 ~]# ps -aux | grep java
jenkins   3966  1.3 19.5 3729860 785864 ?      Ssl  06:22   2:33 /etc/alternatives/java -Djava.awt.headless=true -DJENKINS_HOME=/var/lib/jenkins -jar /usr/lib/jenkins/jenkins.war --logfile=/var/log/jenkins/jenkins.log --webroot=/var/cache/jenkins/war --httpPort=8080 --debug=5 --handlerCountMax=100 --handlerCountMaxIdle=20
root     12167  0.0  0.0 119424   964 pts/0    S+   09:26   0:00 grep --color=auto java



[root@ip-172-31-92-237 opt]# cd /var/lib/jenkins/workspace/
[root@ip-172-31-92-237 workspace]# ll
total 16
drwxr-xr-x 5 jenkins jenkins 4096 Nov 25 07:13 Java-FreeStyle
drwxr-xr-x 5 jenkins jenkins 4096 Nov 25 07:14 Java-FreeStyle-demo
drwxr-xr-x 5 jenkins jenkins 4096 Nov 25 07:35 Java-Maven-Project
drwxr-xr-x 5 jenkins jenkins 4096 Nov 25 08:21 Java-Pipeline-Project
drwxr-xr-x 2 jenkins jenkins    6 Nov 25 08:21 Java-Pipeline-Project@tmp
[root@ip-172-31-92-237 workspace]# cd Java-Pipeline-Project
[root@ip-172-31-92-237 Java-Pipeline-Project]# ll
total 92
-rw-r--r-- 1 jenkins jenkins  548 Nov 25 08:21 azure-pipelines.yml
-rw-r--r-- 1 jenkins jenkins  335 Nov 25 08:21 docker-deploy.yml
-rw-r--r-- 1 jenkins jenkins  124 Nov 25 08:21 Dockerfile
-rw-r--r-- 1 jenkins jenkins  580 Nov 25 08:21 docker-run-deploy.yml
-rw-r--r-- 1 jenkins jenkins  449 Nov 25 08:21 downloadartifact.yml
-rw-r--r-- 1 jenkins jenkins   75 Nov 25 08:21 dummy.txt
-rw-r--r-- 1 jenkins jenkins   29 Nov 25 08:21 hosts
-rw-r--r-- 1 jenkins jenkins  505 Nov 25 08:21 Jenkinsfile-deployment
-rw-r--r-- 1 jenkins jenkins  944 Nov 25 08:21 Jenkinsfile-DockerCD
-rw-r--r-- 1 jenkins jenkins 1383 Nov 25 08:21 Jenkinsfile-DockerCI
-rw-r--r-- 1 jenkins jenkins 1579 Nov 25 08:21 Jenkinsfile-Jfrog
-rw-r--r-- 1 jenkins jenkins  325 Nov 25 08:21 Jenkinsfile-NexusCD
-rw-r--r-- 1 jenkins jenkins 2479 Nov 25 08:21 Jenkinsfile-NexusCI
-rw-r--r-- 1 jenkins jenkins  804 Nov 25 08:21 Jenkinsfile-SES
-rw-r--r-- 1 jenkins jenkins  814 Nov 25 08:21 Jenkinsfile-SSM
-rw-r--r-- 1 jenkins jenkins 1111 Nov 25 08:21 pom.xml
-rw-r--r-- 1 jenkins jenkins 1114 Nov 25 08:21 README-Activeparameters.md
-rw-r--r-- 1 jenkins jenkins  780 Nov 25 08:21 README-DockerCD.md
-rw-r--r-- 1 jenkins jenkins 1865 Nov 25 08:21 README.md
-rw-r--r-- 1 jenkins jenkins  427 Nov 25 08:21 README-NexusCD.md
-rw-r--r-- 1 jenkins jenkins  497 Nov 25 08:21 README-NexusCI.md
-rw-r--r-- 1 jenkins jenkins 1554 Nov 25 08:21 README-SES.md
-rw-r--r-- 1 jenkins jenkins 1695 Nov 25 08:21 README-SSM.md
drwxr-xr-x 3 jenkins jenkins   18 Nov 25 08:21 src
drwxr-xr-x 6 jenkins jenkins  161 Nov 25 08:21 target


Jenkins Pipeline to run jar on background

pipeline {
    agent any
    tools {
    maven 'maven-3.8.4'
    }
    stages{
        stage('git checkout stage ') { 
            steps {
                echo 'git checkout'
                git url:  'https://github.com/srinadhm/springboothello-CICD.git' 
            }
        }
        stage('Build stage ') { 
            steps {
                echo 'maven stage'
                sh 'mvn clean install' 
            }
        }
        stage('run spring boot jar file  ') { 
            steps {
                echo 'run spring boot jar file '
                sh "nohup java -jar target/gs-spring-boot-0.1.0.jar &"
            }
        }
    }
}

Output

Started by user mupparaju srinadh
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Java-Pipeline-Project
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Tool Install)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (git checkout stage )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
git checkout
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/Java-Pipeline-Project/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/srinadhm/springboothello-CICD.git # timeout=10
Fetching upstream changes from https://github.com/srinadhm/springboothello-CICD.git
 > git --version # timeout=10
 > git --version # 'git version 2.32.0'
 > git fetch --tags --force --progress -- https://github.com/srinadhm/springboothello-CICD.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision af74454c512337cf4e486ee462f6ee33ab98a8b2 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D master # timeout=10
 > git checkout -b master af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
Commit message: "Update Jenkinsfile-NexusCI"
 > git rev-list --no-walk af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build stage )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
maven stage
[Pipeline] sh
+ mvn clean install
[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------< org.springframework:gs-spring-boot >-----------------
[INFO] Building gs-spring-boot 0.1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ gs-spring-boot ---
[INFO] Deleting /var/lib/jenkins/workspace/Java-Pipeline-Project/target
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ gs-spring-boot ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/main/resources
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ gs-spring-boot ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /var/lib/jenkins/workspace/Java-Pipeline-Project/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ gs-spring-boot ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ gs-spring-boot ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ gs-spring-boot ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ gs-spring-boot ---
[INFO] Building jar: /var/lib/jenkins/workspace/Java-Pipeline-Project/target/gs-spring-boot-0.1.0.jar
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.0.5.RELEASE:repackage (default) @ gs-spring-boot ---
[INFO] 
[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ gs-spring-boot ---
[INFO] Installing /var/lib/jenkins/workspace/Java-Pipeline-Project/target/gs-spring-boot-0.1.0.jar to /var/lib/jenkins/.m2/repository/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.jar
[INFO] Installing /var/lib/jenkins/workspace/Java-Pipeline-Project/pom.xml to /var/lib/jenkins/.m2/repository/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.873 s
[INFO] Finished at: 2021-11-25T09:19:32Z
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (run spring boot jar file  ) (run spring boot jar file  )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
run spring boot jar file 
[Pipeline] sh
+ nohup java -jar target/gs-spring-boot-0.1.0.jar
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS


#################

Change jenkins port number:

vi /etc/sysconfig/jenkins
JENKINS_PORT="8888"
save changes and exit

service jenkins restart

without nohup run the jar 

pipeline {
    agent any
    tools {
    maven 'maven-3.8.4'
    }
    stages{
        stage('git checkout stage ') { 
            steps {
                echo 'git checkout'
                git url:  'https://github.com/srinadhm/springboothello-CICD.git' 
            }
        }
        stage('Build stage ') { 
            steps {
                echo 'maven stage'
                sh 'mvn clean install' 
            }
        }
        stage('run spring boot jar file  ') { 
            steps {
                echo 'run spring boot jar file '
               sh "java -jar target/gs-spring-boot-0.1.0.jar"
            }
        }
    }
}


[root@ip-172-31-92-237 ~]# jps
14182 Jps
12342 jenkins.war
13806 gs-spring-boot-0.1.0.jar


[root@ip-172-31-92-237 ~]# netstat -plunt | grep :8080
tcp6       0      0 :::8080                 :::*                    LISTEN      13806/java

[root@ip-172-31-92-237 ~]# curl 54.173.80.164:8080
Greetings from Springboot..!!!


http://54.173.80.164:8080/

Greetings from Springboot..!!!

Output:

Started by user mupparaju srinadh
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Java-Pipeline-Project
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Tool Install)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (git checkout stage )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
git checkout
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/Java-Pipeline-Project/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/srinadhm/springboothello-CICD.git # timeout=10
Fetching upstream changes from https://github.com/srinadhm/springboothello-CICD.git
 > git --version # timeout=10
 > git --version # 'git version 2.32.0'
 > git fetch --tags --force --progress -- https://github.com/srinadhm/springboothello-CICD.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision af74454c512337cf4e486ee462f6ee33ab98a8b2 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D master # timeout=10
 > git checkout -b master af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
Commit message: "Update Jenkinsfile-NexusCI"
 > git rev-list --no-walk af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build stage )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
maven stage
[Pipeline] sh
+ mvn clean install
[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------< org.springframework:gs-spring-boot >-----------------
[INFO] Building gs-spring-boot 0.1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ gs-spring-boot ---
[INFO] Deleting /var/lib/jenkins/workspace/Java-Pipeline-Project/target
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ gs-spring-boot ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/main/resources
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ gs-spring-boot ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /var/lib/jenkins/workspace/Java-Pipeline-Project/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ gs-spring-boot ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Java-Pipeline-Project/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ gs-spring-boot ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ gs-spring-boot ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ gs-spring-boot ---
[INFO] Building jar: /var/lib/jenkins/workspace/Java-Pipeline-Project/target/gs-spring-boot-0.1.0.jar
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.0.5.RELEASE:repackage (default) @ gs-spring-boot ---
[INFO] 
[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ gs-spring-boot ---
[INFO] Installing /var/lib/jenkins/workspace/Java-Pipeline-Project/target/gs-spring-boot-0.1.0.jar to /var/lib/jenkins/.m2/repository/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.jar
[INFO] Installing /var/lib/jenkins/workspace/Java-Pipeline-Project/pom.xml to /var/lib/jenkins/.m2/repository/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.073 s
[INFO] Finished at: 2021-11-25T09:49:06Z
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (run spring boot jar file  ) (run spring boot jar file  )
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
run spring boot jar file 
[Pipeline] sh
+ java -jar target/gs-spring-boot-0.1.0.jar

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.5.RELEASE)

2021-11-25 09:49:07.997  INFO 14523 --- [           main] hello.Application                        : Starting Application v0.1.0 on ip-172-31-92-237.ec2.internal with PID 14523 (/var/lib/jenkins/workspace/Java-Pipeline-Project/target/gs-spring-boot-0.1.0.jar started by jenkins in /var/lib/jenkins/workspace/Java-Pipeline-Project)
2021-11-25 09:49:08.000  INFO 14523 --- [           main] hello.Application                        : No active profile set, falling back to default profiles: default
2021-11-25 09:49:08.119  INFO 14523 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c3e4790: startup date [Thu Nov 25 09:49:08 UTC 2021]; root of context hierarchy
2021-11-25 09:49:09.735  INFO 14523 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-11-25 09:49:09.765  INFO 14523 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-11-25 09:49:09.765  INFO 14523 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.34
2021-11-25 09:49:09.777  INFO 14523 --- [ost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib]
2021-11-25 09:49:09.851  INFO 14523 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-11-25 09:49:09.851  INFO 14523 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1735 ms
2021-11-25 09:49:09.910  INFO 14523 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2021-11-25 09:49:09.914  INFO 14523 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2021-11-25 09:49:09.914  INFO 14523 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-11-25 09:49:09.915  INFO 14523 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-11-25 09:49:09.915  INFO 14523 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2021-11-25 09:49:10.057  INFO 14523 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-11-25 09:49:10.250  INFO 14523 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c3e4790: startup date [Thu Nov 25 09:49:08 UTC 2021]; root of context hierarchy
2021-11-25 09:49:10.354  INFO 14523 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String hello.HelloController.index()
2021-11-25 09:49:10.360  INFO 14523 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-11-25 09:49:10.360  INFO 14523 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-11-25 09:49:10.396  INFO 14523 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-11-25 09:49:10.396  INFO 14523 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-11-25 09:49:10.560  INFO 14523 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2021-11-25 09:49:10.714  INFO 14523 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-11-25 09:49:10.721  INFO 14523 --- [           main] hello.Application                        : Started Application in 3.353 seconds (JVM running for 3.84)


Continuous Integration Stages
-------------------------------

1.Get the code from github
2.Build the code 

Continuous Delivery Stages

1..We need to run the final artifacts (jar/war) 

Scripted v/s Declarative
--------------------------
If we have any custom requirement where we have to written lot of logic , prefer scripted pipeline if we are find default behaviour we can prefer declarative 

Declarative pipeline starts with pipeline 
Scripted pipeline starts with node

