##################################

Jenkins Integration with Nexus Jenkins CI Pipeline to push artifacts to nexus with Nexus Artifact Uploader and Pipeline Utility Steps plugins

Server-1 Jenkins Machine (from jenkins machine we will deploy artifacts to nexus machine either it will be jar or war )

Prerequisite
Java
Git
Maven
Jenkins
Nexus

1.Add Maven path in Global tool Configuration

2.Add Nexus Credentials in Manage Credentials

Manage Jenkins ----> Manage Credentials ---> Stores scoped to Jenkins --->  Jenkins ---> Global Credentials ---> Add Credentials 

kind : Username with password Scope : Global Username : admin Password : srinadh ID : nexus-credentials ---> Ok 

3.Install Nexus Artifact Uploader plugin from Manage Plugins avaliable section

4.Install Pipeline Utility Steps plugin from Manage Plugins avaliable section

                    pom = readMavenPom file: "pom.xml"; pom = readMavenPom file: "pom.xml"; comes from Pipeline Utility Steps
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    artifactPath = filesByGlob[0].path;
                    artifactExists = fileExists artifactPath;
					
while uploading jar file we need to know details about pom.xml

because 

artifactId
groupId
version
packaging 

the above details are in pom.xml only and we will those details to nexus Artifact Uploader

nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: NEXUS_PROTOCOL,
                            nexusUrl: NEXUS_URL,
                            groupId: pom.groupId,
                            version: pom.version,
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: artifactPath,
                                type: pom.packaging],
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: "pom.xml",
                                type: "pom"]
                            ]

We can deploy to nexus using maven commands, jenkins nexus artifact uploader plugin  , maven dynamic vm options 

1.mvn deploy ----> maven settings.xml ---> server tag with id, username and password 

2.nexus artifact uploader plugin 

3.mvn deploy:deploy-file \
  -DgroupId=org.example \
  -DartifactId=springbootCICD \
  -Dversion=1.0-SNAPSHOT \
  -Dpackaging=jar \
  
  -Dfile=/root/springbootCICD/target/springbootCICD-1.0-SNAPSHOT.jar \
  -DrepositoryId=Nexus \
  -Durl=http://35.47.25.123/8081/repository/maven-snapshots/ 

 Declarative Pipeline to push artifacts to Nexus Repository
 
 
pipeline {
    agent any
    tools {
        maven "maven-3.8.4"
    }
    environment {
        NEXUS_VERSION = "nexus3"  
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "18.212.161.107:8081"
        NEXUS_REPOSITORY = "maven-releases"
        NEXUS_CREDENTIAL_ID = "nexus-credentials"
    }
    stages {
        stage("SCM") {
            steps {
                script {
                    git 'https://github.com/cloudtechmasters/springboothello-CICD.git';
                }
            }
        }
        stage("Maven Build") {
            steps {
                script {
                    sh "mvn package -DskipTests=true"
                }
            }
        }
        stage("Publish to Nexus Repository Manager") {
            steps {
                script{
                    pom = readMavenPom file: "pom.xml";
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    artifactPath = filesByGlob[0].path;
                    artifactExists = fileExists artifactPath;
                    if(artifactExists) {
                        echo "* File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                        nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: NEXUS_PROTOCOL,
                            nexusUrl: NEXUS_URL,
                            groupId: pom.groupId,
                            version: pom.version,
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: artifactPath,
                                type: pom.packaging],
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: "pom.xml",
                                type: "pom"]
                            ]
                        );
                    } else {
                        error "* File: ${artifactPath}, could not be found";
                    }
                }
            }
        }
    }
}


Output :

Started by user mupparaju srinadh
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Jenkins-Nexus-CI-Pipeline
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Tool Install)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (SCM)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/Jenkins-Nexus-CI-Pipeline/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/cloudtechmasters/springboothello-CICD.git # timeout=10
Fetching upstream changes from https://github.com/cloudtechmasters/springboothello-CICD.git
 > git --version # timeout=10
 > git --version # 'git version 2.32.0'
 > git fetch --tags --force --progress -- https://github.com/cloudtechmasters/springboothello-CICD.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision af74454c512337cf4e486ee462f6ee33ab98a8b2 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D master # timeout=10
 > git checkout -b master af74454c512337cf4e486ee462f6ee33ab98a8b2 # timeout=10
Commit message: "Update Jenkinsfile-NexusCI"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Maven Build)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ mvn package -DskipTests=true
[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------< org.springframework:gs-spring-boot >-----------------
[INFO] Building gs-spring-boot 0.1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ gs-spring-boot ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Jenkins-Nexus-CI-Pipeline/src/main/resources
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Jenkins-Nexus-CI-Pipeline/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ gs-spring-boot ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ gs-spring-boot ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/Jenkins-Nexus-CI-Pipeline/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ gs-spring-boot ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ gs-spring-boot ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ gs-spring-boot ---
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.0.5.RELEASE:repackage (default) @ gs-spring-boot ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.716 s
[INFO] Finished at: 2021-11-26T05:57:17Z
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Publish to Nexus Repository Manager)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] readMavenPom
[Pipeline] findFiles
[Pipeline] echo
gs-spring-boot-0.1.0.jar target/gs-spring-boot-0.1.0.jar false 16224699 1637905085353
[Pipeline] fileExists
[Pipeline] echo
* File: target/gs-spring-boot-0.1.0.jar, group: org.springframework, packaging: jar, version 0.1.0
[Pipeline] nexusArtifactUploader
Uploading artifact gs-spring-boot-0.1.0.jar started....
GroupId: org.springframework
ArtifactId: org.springframework
Classifier: 
Type: jar
Version: 0.1.0
File: gs-spring-boot-0.1.0.jar
Repository:maven-releases
Uploading artifact pom.xml started....
GroupId: org.springframework
ArtifactId: org.springframework
Classifier: 
Type: pom
Version: 0.1.0
File: pom.xml
Repository:maven-releases
Uploading: http://18.212.161.107:8081/repository/maven-releases/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.jar
10 % completed (1.6 MB / 16 MB).
20 % completed (3.2 MB / 16 MB).
30 % completed (4.9 MB / 16 MB).
40 % completed (6.5 MB / 16 MB).
50 % completed (8.1 MB / 16 MB).
60 % completed (9.7 MB / 16 MB).
70 % completed (11 MB / 16 MB).
80 % completed (13 MB / 16 MB).
90 % completed (15 MB / 16 MB).
100 % completed (16 MB / 16 MB).
Uploaded: http://18.212.161.107:8081/repository/maven-releases/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.jar (16 MB at 15 MB/s)
Uploading: http://18.212.161.107:8081/repository/maven-releases/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.pom
Uploaded: http://18.212.161.107:8081/repository/maven-releases/org/springframework/gs-spring-boot/0.1.0/gs-spring-boot-0.1.0.pom (1.1 kB at 5.4 kB/s)
Uploading artifact gs-spring-boot-0.1.0.jar completed.
Uploading artifact pom.xml completed.
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS

Jar is pushed to nexus repository under releases 

http://18.212.161.107:8081/#browse/browse:maven-releases 

http://18.212.161.107:8081/service/rest/repository/browse/maven-releases/org/springframework/gs-spring-boot/0.1.0/

Index of /org/springframework/gs-spring-boot/0.1.0
Name	Last Modified	Size	Description
Parent Directory
gs-spring-boot-0.1.0.jar	Fri Nov 26 05:57:18 UTC 2021	16224699	
gs-spring-boot-0.1.0.jar.md5	Fri Nov 26 05:57:19 UTC 2021	32	
gs-spring-boot-0.1.0.jar.sha1	Fri Nov 26 05:57:19 UTC 2021	40	
gs-spring-boot-0.1.0.pom	Fri Nov 26 05:57:19 UTC 2021	1111	
gs-spring-boot-0.1.0.pom.md5	Fri Nov 26 05:57:19 UTC 2021	32	
gs-spring-boot-0.1.0.pom.sha1	Fri Nov 26 05:57:19 UTC 2021	40	

